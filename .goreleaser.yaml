# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 2
project_name: git-raycast
report_sizes: true

before:
  hooks:
    - go mod tidy
    # Generate completions
    - make completions

builds:
  - binary: git-raycast
    main: ./git-raycast/main.go
    env:
      - CGO_ENABLED=0
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath

universal_binaries:
  - replace: true
    mod_timestamp: "{{ .CommitTimestamp }}"

archives:
  - name_template: "{{ .ProjectName }}"
    format: tar.gz
    files:
      - "LICENSE"
      - "README.md"
      - src: "completions.build/*"
        dst: "."

brews:
  - repository:
      owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
      name: homebrew-tap
      token: "{{ .Env.COMMITTER_TOKEN }}"
    commit_author:
      name: "{{ .Env.GITHUB_ACTOR }}"
      email: "{{ .Env.GITHUB_ACTOR }}@users.noreply.github.com"
    homepage: "https://github.com/{{ .Env.GITHUB_REPOSITORY }}"
    description: "Automate git using Raycast AI"
    license: "MIT"
    directory: Formula
    custom_block: |
      livecheck do
        url :stable
        strategy :github_latest
      end

      head do
        url "https://github.com/{{ .Env.GITHUB_REPOSITORY }}.git", branch: "main"
        depends_on "go" => :build
      end
    test: |
      assert_match version.to_s, shell_output("#{bin}/{{ .ProjectName }} --version")
    install: |
      if build.head?
        system "go", "build", *std_go_args(output: bin/"git-raycast"), "./git-raycast"
      else
        bin.install "git-raycast"
      end

      bash_completion_path = "git-raycast.bash"
      zsh_completion_path = "git-raycast.zsh"
      fish_completion_path = "git-raycast.fish"

      completion_files_missing = []
      completion_files_missing << "bash" unless File.exist?(bash_completion_path)
      completion_files_missing << "zsh" unless File.exist?(zsh_completion_path)
      completion_files_missing << "fish" unless File.exist?(fish_completion_path)

      bash_completion.install bash_completion_path => "git-raycast.bash_completion" if File.exist?(bash_completion_path)
      zsh_completion.install zsh_completion_path => "_git-raycast" if File.exist?(zsh_completion_path)
      fish_completion.install fish_completion_path if File.exist?(fish_completion_path)

release:
  github:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: "{{ .ProjectName }}"
  draft: false
  include_meta: true

checksum:
  name_template: "checksums.txt"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^ci:"
      - Merge pull request
      - Merge branch
